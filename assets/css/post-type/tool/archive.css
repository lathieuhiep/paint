.site-tool-warp .grid-warp.active-sidebar {
  display: grid;
  grid-gap: 2rem 5rem;
}
@media (min-width: 992px) {
  .site-tool-warp .grid-warp.active-sidebar {
    grid-template-columns: 1fr 75%;
  }
}
.site-tool-warp .grid-warp .sidebar .widget .widget-title {
  margin-bottom: 1.8rem;
  padding-bottom: 1.8rem;
  font-size: 2rem;
  border-bottom: 1px solid #FACA26;
}
.site-tool-warp .grid-warp .sidebar .widget ul li:not(:last-child) {
  margin-bottom: 1.2rem;
  padding-bottom: 1.2rem;
  border-bottom: 0.2rem solid #FACA26;
}
.site-tool-warp .grid-warp .sidebar .widget ul li a {
  color: #000000;
}
.site-tool-warp .grid-warp .sidebar .widget ul li a:hover {
  color: #FACA26;
}
.site-tool-warp .grid-warp .sidebar .widget ul li.cat-tool-item {
  display: grid;
  grid-gap: 12px;
  grid-template-columns: 1fr auto;
}
.site-tool-warp .grid-warp .sidebar .widget ul li.cat-tool-item.active {
  font-weight: 700;
}

.tool-list-grid .item {
  background-color: #E5E5E5;
  box-shadow: rgba(0, 0, 0, 0.24) 0 3px 8px;
  -webkit-transition: all 0.4s ease-in-out;
  -moz-transition: all 0.4s ease-in-out;
  -o-transition: all 0.4s ease-in-out;
  transition: all 0.4s ease-in-out;
}
.tool-list-grid .item:hover {
  transform: scale(1.08);
}
.tool-list-grid .item__thumbnail {
  position: relative;
}
.tool-list-grid .item__thumbnail .icon-image {
  position: absolute;
  top: 1.5rem;
  right: 1.5rem;
  width: 3rem;
  height: 3rem;
  z-index: 2;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 0.5rem;
  background-color: #FE5621;
}
.tool-list-grid .item__thumbnail .icon-image image {
  display: inline-block;
}
@media (min-width: 768px) {
  .tool-list-grid .item__thumbnail .image-box {
    display: block;
    overflow: hidden;
    height: 25.5rem;
  }
  .tool-list-grid .item__thumbnail .image-box img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}
.tool-list-grid .item__info {
  padding: 1rem 1.2rem;
}
@media (min-width: 1400px) {
  .tool-list-grid .item__info {
    display: grid;
    grid-gap: 1.2rem;
    grid-template-columns: 17rem 1fr;
  }
}
.tool-list-grid .item__info .title {
  margin-bottom: 0;
  font-size: 1.5rem;
  color: #000000;
}
@media (min-width: 1400px) {
  .tool-list-grid .item__info .title {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}
@media (min-width: 1400px) {
  .tool-list-grid .item__info .meta {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}
.tool-list-grid .item__info .meta a {
  font-size: 1.4rem;
  color: #697F94;
}
.tool-list-grid .item .right-box {
  color: #697F94;
  font-weight: 700;
  font-size: 1.4rem;
}
@media (min-width: 1400px) {
  .tool-list-grid .item .right-box {
    text-align: right;
  }
}

.site-tool-warp .tools-warp .heading {
  margin-bottom: 2.5rem;
  text-transform: uppercase;
  font-size: 2rem;
}
.site-tool-warp .tools-warp .tool-grid-tax {
  display: grid;
}
@media (min-width: 992px) {
  .site-tool-warp .tools-warp .tool-grid-tax {
    grid-gap: 3.6rem 2.4rem;
    grid-template-columns: repeat(3, 1fr);
  }
}
@media (max-width: 991px) {
  .site-tool-warp .tools-warp .tool-grid-tax {
    grid-gap: 1.6rem;
  }
}
@media (min-width: 768px) and (max-width: 991px) {
  .site-tool-warp .tools-warp .tool-grid-tax {
    grid-template-columns: repeat(3, 1fr);
  }
}
@media (min-width: 480px) and (max-width: 767px) {
  .site-tool-warp .tools-warp .tool-grid-tax {
    grid-template-columns: repeat(2, 1fr);
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
